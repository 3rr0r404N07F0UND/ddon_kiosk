-- --------------------------------------------------------
-- 호스트:                          127.0.0.1
-- 서버 버전:                        10.11.1-MariaDB - mariadb.org binary distribution
-- 서버 OS:                        Win64
-- HeidiSQL 버전:                  12.4.0.6659
-- --------------------------------------------------------

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET NAMES utf8 */;
/*!50503 SET NAMES utf8mb4 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

-- 테이블 team03.membertable 구조 내보내기
CREATE TABLE IF NOT EXISTS `membertable` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `phoneNumber` char(20) DEFAULT NULL,
  `point` int(11) DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `phoneNumber` (`phoneNumber`)
) ENGINE=InnoDB AUTO_INCREMENT=46 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

-- 테이블 데이터 team03.membertable:~10 rows (대략적) 내보내기
INSERT INTO `membertable` (`id`, `phoneNumber`, `point`) VALUES
	(0, '1234', 0),
	(1, '010-9500-9987', 99996875),
	(2, '010-1111-1111', 38293),
	(3, '010-2222-2222', 12880),
	(4, '010-6523-4895', 0),
	(5, '010-5264-2312', 0),
	(6, '010-3689-3269', 0),
	(8, '010-5555-5555', 0),
	(11, '010-8888-8888', 0),
	(16, '010-8523-6987', 0),
	(17, '01062163523', -999999);

-- 테이블 team03.menutable 구조 내보내기
CREATE TABLE IF NOT EXISTS `menutable` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `foodType` int(11) NOT NULL,
  `imgUrl` varchar(255) NOT NULL,
  `foodTitle` varchar(255) NOT NULL,
  `foodDesc` text DEFAULT NULL,
  `foodInfo` text DEFAULT NULL,
  `allergyInfo` text DEFAULT NULL,
  `foodTop` tinyint(1) NOT NULL,
  `foodPrice` int(11) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=50 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

-- 테이블 데이터 team03.menutable:~49 rows (대략적) 내보내기
INSERT INTO `menutable` (`id`, `foodType`, `imgUrl`, `foodTitle`, `foodDesc`, `foodInfo`, `allergyInfo`, `foodTop`, `foodPrice`) VALUES
	(1, 1, '1.png', '도리텐 정식', '(일본식 닭튀김) 미야자키 명물 (650 kcal)', '닭고기, 명란젓, 계란, 장국', '닭고기, 명란젓, 계란', 1, 10000),
	(2, 1, '2.png', '민치카츠 정식', '부드러운 민치 돈까스 (568 kcal)', '돼지고기, 명란젓, 계란', '돼지고기, 명란젓, 계란', 1, 14000),
	(3, 1, '3.png', '치킨그릴 정식', '닭다리살로 만든 치킨스테이크 (570 kcal)', '닭고기, 명란젓, 계란, 장국', '닭고기, 명란젓, 계란', 1, 10000),
	(4, 1, '4.png', '믹스 후라이 정식', '기본 등심카츠, 새우, 게맛살, 고로케 (678 kcal)', '돼지고기, 새우, 게, 명란젓, 계란, 장국', '돼지고기, 명란젓, 갑각류, 계란', 1, 14000),
	(5, 1, '5.png', '치킨 난반 정식', '닭튀김에 새콤한 난반 소스 + 타르타르 소스 (725 kcal)', '닭고기, 명란젓, 계란, 장국', '연어, 명란젓, 계란', 1, 12000),
	(6, 1, '6.png', '큐브스테이크 정식', '블랙앵거스 초이스급 소고기 (679 kcal)', '소고기, 명란젓, 계란, 장국', '소고기, 명란젓, 계란', 0, 16000),
	(7, 1, '7.png', '쇼가야키 정식', '부드러운 돼지 목살 + 생강소스의 만남 (689 kcal)', '돼지고기, 명란젓, 계란, 장국', '돼지고기, 명란젓, 계란', 0, 16000),
	(8, 1, '8.png', '화로구이 정식', '와규 프라임급 진갈비 (632 kcal)', '소고기, 명란젓, 계란, 장국', '소고기, 명란젓, 계란', 0, 16000),
	(9, 1, '9.png', '함박 그릴 정식', '특제 데미그라스 소스 (686 kcal)', '소고기, 명란젓, 계란, 장국', '소고기, 명란젓, 계란', 0, 14000),
	(10, 1, '10.png', '스키야키 정식', '일본식 소고기 전골 요리(날계란 유자폰즈 소스) (403 kcal)', '소고기, 버섯, 명란젓, 계란, 장국', '소고기, 버섯, 명란젓, 계란', 0, 18000),
	(11, 1, '11.png', '연어회 정식', '부드러운 식감 숙성 연어 (655 kcal)', '연어, 명란젓, 계란, 장국', '연어, 명란젓, 계란', 0, 13000),
	(12, 1, '12.png', '호르몬그릴 정식', '큐슈풍 칠리소스 곱창볶음요리 (778 kcal)', '소고기, 곱창, 명란젓, 계란, 장국', '소고기, 명란젓, 계란', 0, 18000),
	(13, 1, '13.png', '호르몬 모츠나베 정식', '후쿠오카식 곱창 전골 요리 (688 kcal)', '소고기, 명란젓, 계란', '소고기, 명란젓, 계란', 0, 18000),
	(14, 1, '14.png', '붕장어구이 정식', '달콤한 특제 데리아끼소스 (423 kcal)', '붕장어, 명란젓, 계란, 장국', '생선, 명란젓, 계란', 0, 14000),
	(15, 1, '15.png', '생선구이 정식', '고등어 생선 구이 (271 kcal)', '고등어, 명란젓, 계란, 장국', '생선, 명란젓, 계란', 0, 14000),
	(16, 1, '16.png', '본카레 정식', '맛있는 일본식 카레 (434 kcal)', '돼지고기, 명란젓, 계란, 장국', '돼지고기, 강황, 명란젓, 계란', 0, 16000),
	(17, 1, '17.png', '스테미너 낫토 정식', '건강에 좋은 영양만점 낫토 (417 kcal)', '낫토, 명란젓, 계란, 장국', '낫토, 명란젓, 계란', 0, 14000),
	(18, 1, '18.png', '사오리(학꽁치)튀김', '학꽁치, 명란젓, 계란, 장국 (357 kcal)', '생선, 명란젓, 계란', '열빙어', 0, 14000),
	(19, 1, '19.png', '키즈정식', '어린이 정식 세트 (412 kcal)', '돼지고기, 명란젓, 계란, 장국', '돼지고기, 명란젓, 계란', 0, 9000),
	(20, 2, '1.png', '나가사키 해물라멘', '일본식 하얀 해물라면 (687 kcal)', '밀가루, 새우, 배추, 당근, 버섯, 조개', '새우, 조개, 밀가루', 0, 10000),
	(21, 2, '2.png', '삿뽀로 미소라멘', '된장을 베이스로 만든 라멘 (587 kcal)', '숙주, 돼지고기, 파, 토란, 미소', '돼지고기', 0, 8000),
	(22, 3, '1.png', '쇼가야키', '부드러운 돼지 목살 + 생강소스의 만남 (550 kcal)', '돼지고기, 생강, 무순, 양파, 방울토마토', '돼지고기', 0, 8000),
	(23, 3, '2.png', '치킨그릴', '그릴에 구운 닭고기와 감자튀김 (557 kcal)', '닭고기, 계란, 방울토마토, 소시지, 완두콩, 감자, 밀가루', '닭고기, 계란, 소시지, 밀가루', 0, 8000),
	(24, 3, '3.png', '화로구이 8~10P', '화로에 구워먹는 소고기 (607 kcal)', '레몬, 소고기', '소고기', 0, 16000),
	(25, 3, '4.png', '붕장어', '고추장 양념에 버무린 붕장어구이 (472 kcal)', '무순, 레몬, 생강, 붕장어, 고추장', '붕장어', 0, 10000),
	(26, 3, '5.png', '연어사시미', '노르웨이 생 연어회 (560 kcal)', '생강, 연어, 무순, 와사비, 레몬', '연어', 0, 13000),
	(27, 3, '6.png', '치킨난반', '저온 기름에 튀긴 닭고기 (645 kcal)', '레몬, 닭고기, 양배추, 치커리, 밀가루, 계란', '밀가루, 닭고기, 계란', 0, 8000),
	(28, 3, '7.png', '스위트포테이토', '달달한 고구마 튀김 (312 kcal)', '고구마, 밀가루, 계란', '밀가루, 계란', 0, 7000),
	(29, 3, '8.png', '시샤모', '말린 별빙어 (312 kcal)', '빙어, 상추, 레몬', '빙어', 0, 10000),
	(30, 3, '9.png', '치킨가라아게', '전분을 얇게 입혀 튀긴 닭고기 (458 kcal)', '양배추, 치커리, 닭고기, 레몬, 전분, 계란, 마요소스', '닭고기, 계란', 0, 8000),
	(31, 3, '10.png', '스키야키', '얇게 저민 고기와 채소를 삶은 요리 (650 kcal)', '소고기, 버섯, 배추, 어묵, 만두, 양배추', '소고기, 어묵, 만두', 0, 8000),
	(32, 3, '11.png', '믹스후라이', '새우튀김 + 닭고기 튀김 + 돼지고기 튀김 (655 kcal)', '치커리, 레몬, 새우, 숙주, 닭고기, 양파, 밀가루, 돼지고기, 감자', '닭고기, 밀가루, 새우, 돼지고기, 감자', 0, 8000),
	(33, 3, '12.png', '민치카츠', '다진 고기를 사용한 튀김옷 커틀릿 (786 kcal)', '돼지고기, 소고기, 밀가루, 계란, 레몬, 치커리, 숙주', '돼지고기, 소고기, 밀가루, 계란', 0, 7000),
	(34, 3, '13.png', '감자고로케', '으깬 감자에 양파를 넣어 튀킨 고로케 (315 kcal)', '감자, 당근, 양파, 치즈, 밀가루, 빵가루, 계란, 파슬리', '치즈, 계란, 밀가루, 빵가루', 0, 4000),
	(35, 3, '14.png', '스노우크랩', '대게 튀김 (456 kcal)', '밀가루, 계란, 대게', '밀가루, 계란, 대게', 0, 12000),
	(36, 3, '15.png', '스테미너 낫토', '낫토균을 이용해 발효시킨 콩 (312 kcal)', '낫토, 계란, 무순, 고추', '계란', 0, 7000),
	(37, 3, '16.png', '호르몬 모츠나베', '곱창전골 (745 kcal)', '돼지 내장, 배추, 부추, 어묵, 숙주, 고추', '돼지 내장, 어묵', 0, 15000),
	(38, 3, '17.png', '연어구이', '노르웨이 연어 구이 (456 kcal)', '연어, 레몬, 생강', '연어', 0, 11000),
	(39, 3, '18.png', '고등어구이 1/2', '소금에 절인 고등어구이 (356 kcal)', '고등어, 레몬, 생강', '고등어', 0, 9000),
	(40, 4, '1.png', '콜라', '코카콜라 (92 kcal)', NULL, NULL, 0, 3000),
	(41, 4, '2.png', '사이다', '스프라이트 (160 kcal)', NULL, NULL, 0, 3000),
	(42, 4, '3.png', '닥터페퍼', '닥터테퍼 (212 kcal)', NULL, NULL, 0, 5000),
	(43, 4, '4.png', '환타', '환타 (136 kcal)', NULL, NULL, 0, 3000),
	(44, 5, '1.png', '일본주', NULL, NULL, NULL, 0, 100000),
	(45, 5, '2.png', '사케', NULL, NULL, NULL, 0, 20000),
	(46, 5, '3.png', '아사히 생맥주', NULL, NULL, NULL, 0, 6000),
	(47, 5, '4.png', '산토리 하이볼', NULL, NULL, NULL, 0, 8000),
	(48, 5, '5.png', '한라산 소주', NULL, NULL, NULL, 0, 6000),
	(49, 5, '6.png', '히비키 위스키', NULL, NULL, NULL, 0, 120000);

-- 테이블 team03.ordertable 구조 내보내기
CREATE TABLE IF NOT EXISTS `ordertable` (
  `orderNumber` int(11) NOT NULL AUTO_INCREMENT,
  `orderHistory` longtext CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NOT NULL,
  `membershipNumber` char(20) DEFAULT NULL,
  `orderTime` timestamp NULL DEFAULT current_timestamp() ON UPDATE current_timestamp(),
  `totalPrice` int(11) NOT NULL,
  PRIMARY KEY (`orderNumber`),
  KEY `membershipNumber` (`membershipNumber`)
) ENGINE=InnoDB AUTO_INCREMENT=207 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

-- 테이블 데이터 team03.ordertable:~140 rows (대략적) 내보내기
INSERT INTO `ordertable` (`orderNumber`, `orderHistory`, `membershipNumber`, `orderTime`, `totalPrice`) VALUES
	(66, '[2,2,2,2,2]', '010-9500-9987', '2023-04-05 07:16:29', 70000),
	(67, '[1]', '', '2023-04-05 07:17:25', 10000),
	(68, '[6,6]', '', '2023-04-05 07:20:48', 22000),
	(69, '[2,2,2]', '', '2023-04-05 07:21:42', 37000),
	(70, '[1,1,1,1,1,1,1,1,1,1]', '', '2023-04-05 07:23:39', 308000),
	(71, '[2]', '', '2023-04-05 07:27:16', 14000),
	(73, '[6]', '', '2023-04-05 07:27:58', 16000),
	(74, '[5]', '', '2023-04-05 07:28:22', 12000),
	(75, '[5]', '', '2023-04-05 07:30:23', 12000),
	(76, '[4]', '', '2023-04-05 07:30:58', 14000),
	(77, '[2]', '010-1111-1111', '2023-04-05 07:31:28', 14000),
	(78, '[4]', '', '2023-04-05 07:32:21', 14000),
	(79, '[2]', '010-1111-1111', '2023-04-05 07:32:31', 14000),
	(80, '[4]', '', '2023-04-05 07:32:37', 14000),
	(81, '[42,41]', '', '2023-04-05 07:34:22', 8000),
	(82, '[6,1]', '010-1111-1111', '2023-04-05 07:49:50', 26000),
	(83, '[6]', '', '2023-04-05 07:53:42', 16000),
	(84, '[6]', '', '2023-04-05 07:55:01', 16000),
	(85, '[6]', '', '2023-04-05 07:58:03', 16000),
	(86, '[6]', '', '2023-04-05 07:59:00', 16000),
	(87, '[6]', '', '2023-04-05 07:59:07', 16000),
	(88, '[6]', '', '2023-04-05 07:59:09', 16000),
	(89, '[6]', '', '2023-04-05 07:59:17', 16000),
	(90, '[6]', '', '2023-04-05 08:02:11', 16000),
	(91, '[2,6,5,3]', '', '2023-04-05 08:02:59', 52000),
	(92, '[6]', '', '2023-04-05 08:03:11', 16000),
	(93, '[5,2,3]', '', '2023-04-05 08:03:51', 36000),
	(94, '[5,2,3]', '', '2023-04-05 08:04:43', 36000),
	(95, '[5,2,3]', '', '2023-04-05 08:05:01', 36000),
	(96, '[5,2,3]', '', '2023-04-05 08:05:22', 36000),
	(97, '[5,2,3]', '', '2023-04-05 08:06:11', 36000),
	(98, '[5,2,3]', '', '2023-04-05 08:06:22', 36000),
	(99, '[5,2,3]', '', '2023-04-05 08:07:04', 36000),
	(100, '[5,2,3]', '', '2023-04-05 08:07:43', 36000),
	(101, '[5,2,3]', '', '2023-04-05 08:08:04', 36000),
	(102, '[5,2,3]', '', '2023-04-05 08:08:48', 36000),
	(103, '[1,1,1,1,1,1,6,3]', '', '2023-04-05 08:11:54', 86000),
	(104, '[1,1,1,1,1,1,6,3]', '', '2023-04-05 08:13:16', 86000),
	(105, '[1,1,1,1,1,1,6,3]', '', '2023-04-05 08:14:42', 86000),
	(106, '[1,1,1,1,1,1,6,3]', '', '2023-04-05 08:15:18', 86000),
	(107, '[6,6,6,6,6,6,6]', '010-2222-2222', '2023-04-05 08:15:43', 112000),
	(108, '[1,1,1,1,1,1,6,3]', '', '2023-04-05 08:16:26', 86000),
	(109, '[1,1,1,1,1,1,6,3]', '', '2023-04-05 08:17:02', 86000),
	(110, '[1,1,1,1,1,1,6,3]', '', '2023-04-05 08:17:35', 86000),
	(111, '[1,1,1,1,1,1,6,3]', '', '2023-04-05 08:17:54', 86000),
	(112, '[1,1,1,1,1,1,6,3]', '', '2023-04-05 08:19:53', 86000),
	(113, '[1,1,1,1,1,1,6,3]', '', '2023-04-05 08:19:58', 86000),
	(114, '[1,1,1,1,1,1,6,3]', '', '2023-04-05 08:20:37', 86000),
	(115, '[1,1,1,1,1,1,6,3]', '', '2023-04-05 08:20:41', 86000),
	(116, '[1,1,1,1,1,1,6,3]', '', '2023-04-05 08:21:15', 86000),
	(117, '[1,1,1,1,1,1,6,3]', '', '2023-04-05 08:22:59', 86000),
	(118, '[1,1,1,1,1,1,6,3]', '', '2023-04-05 08:23:22', 86000),
	(119, '[1,1,1,1,1,1,6,3]', '', '2023-04-05 08:24:44', 86000),
	(120, '[1,1,1,1,1,1,6,3]', '', '2023-04-05 08:25:14', 86000),
	(121, '[1,1,1,1,1,1,6,3]', '', '2023-04-05 08:25:55', 86000),
	(122, '[1,1,1,1,1,1,6,3]', '', '2023-04-05 08:26:23', 86000),
	(123, '[1,1,1,1,1,1,6,3]', '', '2023-04-05 08:26:49', 86000),
	(124, '[1,1,1,1,1,1,6,3]', '', '2023-04-05 08:27:29', 86000),
	(125, '[1,1,1,1,1,1,6,3]', '', '2023-04-05 08:27:36', 86000),
	(126, '[1,1,1,1,1,1,6,3]', '', '2023-04-05 08:28:23', 86000),
	(127, '[1,1,1,1,1,1,6,3]', '', '2023-04-05 08:28:40', 86000),
	(128, '[1,1,1,1,1,1,6,3]', '', '2023-04-05 08:29:21', 86000),
	(129, '[1,1,1,1,1,1,6,3]', '', '2023-04-05 08:30:58', 86000),
	(130, '[1,1,1,1,1,1,6,3]', '', '2023-04-05 08:32:55', 86000),
	(131, '[1,1,1,1,1,1,6,3]', '', '2023-04-05 08:33:21', 86000),
	(132, '[1,1,1,1,1,1,6,3]', '', '2023-04-05 08:33:45', 86000),
	(133, '[1,1,1,1,1,1,6,3]', '', '2023-04-05 08:34:46', 86000),
	(134, '[1,1,1,1,1,1,6,3]', '', '2023-04-05 08:35:57', 86000),
	(135, '[1,1,1,1,1,1,6,3]', '', '2023-04-05 08:36:52', 86000),
	(136, '[1,1,1,1,1,1,6,3]', '', '2023-04-05 08:37:32', 86000),
	(137, '[1,1,1,1,1,1,6,3]', '', '2023-04-05 08:38:01', 86000),
	(138, '[1,1,1,1,1,1,6,3]', '', '2023-04-05 08:38:40', 86000),
	(139, '[17,17,17,19,19,19,19,2,2,2,2,2]', '010-1111-1111', '2023-04-05 09:02:36', 148000),
	(140, '[5,2,3]', '', '2023-04-05 09:40:24', 36000),
	(141, '[5,2,3]', '', '2023-04-05 09:47:26', 36000),
	(142, '[5,2,3]', '', '2023-04-05 09:47:42', 36000),
	(143, '[5,2,3]', '', '2023-04-05 09:47:49', 36000),
	(144, '[5,2,3]', '', '2023-04-05 09:48:17', 36000),
	(145, '[5,2,3]', '', '2023-04-05 09:48:53', 36000),
	(146, '[5,2,3]', '', '2023-04-05 09:49:19', 36000),
	(147, '[5,2,3]', '', '2023-04-05 09:49:54', 36000),
	(148, '[5,2,3]', '', '2023-04-05 09:50:44', 36000),
	(149, '[5,2,3]', '', '2023-04-05 09:50:53', 36000),
	(150, '[5,2,3]', '', '2023-04-05 09:51:17', 36000),
	(151, '[5,2,3]', '', '2023-04-05 09:51:27', 36000),
	(152, '[5,2,3]', '', '2023-04-05 09:51:38', 36000),
	(153, '[5,2,3]', '', '2023-04-05 09:51:57', 36000),
	(154, '[5,2,3]', '', '2023-04-05 09:54:01', 36000),
	(155, '[5,2,3]', '', '2023-04-05 09:54:13', 36000),
	(156, '[5,2,3]', '', '2023-04-05 09:57:05', 36000),
	(157, '[5,2,3]', '', '2023-04-05 10:02:04', 36000),
	(158, '[5,2,3]', '', '2023-04-05 10:02:26', 36000),
	(159, '[5,2,3]', '', '2023-04-05 10:02:52', 36000),
	(160, '[5,2,3]', '', '2023-04-05 10:03:01', 36000),
	(161, '[5,2,3]', '', '2023-04-05 10:03:11', 36000),
	(162, '[5,2,3]', '', '2023-04-05 10:03:20', 36000),
	(163, '[5,2,3]', '', '2023-04-05 10:03:44', 36000),
	(164, '[5,2,3]', '', '2023-04-05 10:03:53', 36000),
	(165, '[1]', '010-1111-1111', '2023-04-05 10:05:23', 10000),
	(166, '[1]', '010-1111-1111', '2023-04-05 10:06:22', 10000),
	(167, '[5,2,3]', '', '2023-04-05 10:06:22', 36000),
	(168, '[5,2,3]', '', '2023-04-05 10:06:47', 36000),
	(169, '[5,2,3]', '', '2023-04-05 10:07:02', 36000),
	(170, '[1]', '010-1111-1111', '2023-04-05 10:07:59', 10000),
	(171, '[5,2,3]', '', '2023-04-05 10:08:08', 36000),
	(172, '[5,2,3]', '', '2023-04-05 10:08:46', 36000),
	(173, '[1]', '010-1111-1111', '2023-04-05 10:08:48', 10000),
	(174, '[5,2,3]', '', '2023-04-05 10:09:01', 36000),
	(175, '[5,2,3]', '', '2023-04-05 10:09:11', 36000),
	(176, '[1]', '010-1111-1111', '2023-04-05 10:09:11', 10000),
	(177, '[5,2,3]', '', '2023-04-05 10:09:38', 36000),
	(178, '[5,2,3]', '', '2023-04-05 10:09:43', 36000),
	(179, '[5,2,3]', '', '2023-04-05 10:10:22', 36000),
	(180, '[1]', '010-1111-1111', '2023-04-05 10:10:30', 10000),
	(181, '[5,2,3]', '', '2023-04-05 10:10:34', 36000),
	(182, '[5,2,3]', '', '2023-04-05 10:11:39', 36000),
	(183, '[1]', '010-1111-1111', '2023-04-05 10:11:43', 10000),
	(184, '[5,2,3]', '', '2023-04-05 10:11:53', 36000),
	(185, '[5,2,3]', '', '2023-04-05 10:12:10', 36000),
	(186, '[1]', '010-1111-1111', '2023-04-05 10:12:15', 10000),
	(187, '[5,2,3]', '', '2023-04-05 10:12:53', 36000),
	(188, '[5,2,3]', '', '2023-04-05 10:13:33', 36000),
	(189, '[5,2,3]', '', '2023-04-05 10:13:47', 36000),
	(190, '[5,2,3]', '', '2023-04-05 10:13:54', 36000),
	(191, '[5,2,3]', '', '2023-04-05 10:14:12', 36000),
	(192, '[1]', '010-1111-1111', '2023-04-05 10:14:18', 10000),
	(193, '[5,2,3]', '', '2023-04-05 10:15:02', 36000),
	(194, '[1]', '010-1111-1111', '2023-04-05 10:15:07', 10000),
	(195, '[5,2,3]', '', '2023-04-05 10:15:12', 36000),
	(196, '[1]', '010-1111-1111', '2023-04-05 10:15:14', 10000),
	(197, '[5,2,3]', '', '2023-04-05 10:15:19', 36000),
	(198, '[1]', '010-1111-1111', '2023-04-05 10:15:26', 10000),
	(199, '[5,2,3]', '', '2023-04-05 10:17:37', 36000),
	(200, '[2,6,5,3]', '', '2023-04-05 10:59:41', 52000),
	(201, '[2,6,5,3]', '', '2023-04-05 11:02:22', 52000),
	(202, '[6]', '', '2023-04-05 11:18:38', 16),
	(203, '[6]', '', '2023-04-05 11:19:09', 16),
	(204, '[1]', '', '2023-04-05 11:19:28', 10),
	(205, '[2]', '', '2023-04-05 11:19:46', 14),
	(206, '[1]', '', '2023-04-05 11:19:55', 10);

/*!40103 SET TIME_ZONE=IFNULL(@OLD_TIME_ZONE, 'system') */;
/*!40101 SET SQL_MODE=IFNULL(@OLD_SQL_MODE, '') */;
/*!40014 SET FOREIGN_KEY_CHECKS=IFNULL(@OLD_FOREIGN_KEY_CHECKS, 1) */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40111 SET SQL_NOTES=IFNULL(@OLD_SQL_NOTES, 1) */;
